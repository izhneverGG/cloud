server:
  port: 3000 # 服务端口
spring:
  application:
    name: gateway  #服务名称
  cloud:
    nacos:
      config:
        server-addr: 127.0.0.1:8848       #注册到Nacos
    gateway:     # spring cloud gateway 路由配置方式
      discovery:      #是否与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
        locator:      #http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问。
          enabled: true
          lower-case-service-id: true
      routes:
        - id: usercenter
          uri: lb://usercenter
          predicates:
            - Path= *
#      default-filters:
#        - name: AuthenticationFitler
#          args:
#            name: fallbackcmd
#            #fallbackUri: forward:/fallback
#        #重试过滤器
#        - name: Retry
#          args:
#            retries: 3 #重试次数
#            series:
#            #- SERVER_ERROR //重试状态码段，默认5xx
#            methods:  #需要进行重试的方法
#              - GET
#              - POST
#              - PUT
#              - PATCH
#              - DELETE
#            exceptions: #需要进行重试的异常，默认
#              - java.io.IOException
#hystrix的超时时间
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 30000
#ribbon的超时时间
ribbon:
  ReadTimeout: 30000
  ConnectTimeout: 30000
